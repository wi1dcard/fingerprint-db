name: Generate fingerprints

on:
  push:
    branches: ["master"]

jobs:
  build-echoserver:
    name: Build Fingerproxy echoserver
    runs-on: ubuntu-latest
    env:
      CGO_ENABLED: "0"
      GOARCH: amd64
      BUILD_DIR: ./example/echo-server
    steps:
      - uses: actions/checkout@v4
        with:
          repository: wi1dcard/fingerproxy

      - uses: actions/setup-go@v5
        with:
          go-version: ~1.21.0

      # filenames are according to os matrix below
      - run: ./testdata/gencert.sh
      - run: GOOS=linux go build -o echoserver_ubuntu-22.04 $BUILD_DIR
      - run: GOOS=windows go build -o echoserver_windows-2022 $BUILD_DIR
      - run: GOOS=darwin go build -o echoserver_macos-13 $BUILD_DIR

      - uses: actions/upload-artifact@v4
        with:
          name: echoserver
          path: |
            echoserver_*
            tls.crt
            tls.key

  golang:
    name: Golang
    runs-on: ${{ matrix.os }}
    needs: build-echoserver
    strategy:
      matrix:
        os: [ubuntu-22.04, windows-2022, macos-13]
        version:
          - ~1.19.0
          - ~1.20.0
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.version }}
          cache: false

      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: echoserver

      - shell: bash
        run: |
          echo "## Golang ${{ matrix.version }} @ ${{ matrix.os }}" >> $GITHUB_STEP_SUMMARY
          chmod +x ./echoserver_${{ matrix.os }}
          ./echoserver_${{ matrix.os }} -verbose 2>> $GITHUB_STEP_SUMMARY &
          go run ./go/main.go
          kill %1
          wait

      # - uses: actions/upload-artifact@v4
      #   with:
      #     name: fingerprint
      #     path: fingerprint.json
